digraph "main"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node88 [label="main",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node88 -> Node89 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="Teuchos::Teuchos_Version",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d74/namespace_teuchos.html#af543b117c61d1cf52e2b464f2c618309"];
  Node88 -> Node90 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="GetRandomMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/df5/cxx__main__qr__solver_8cpp.html#a45db83713c16ec2f8224c09475acffb8"];
  Node90 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="Teuchos::rcp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d74/namespace_teuchos.html#a8ce99105ee4c7203a1ecb670a198671a",tooltip="Deprecated. "];
  Node91 -> Node92 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="Teuchos::RCP::rcpWithDealloc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a0c6441ac96ec5797f7b487e4c851aebe",tooltip="Initialize from a raw pointer with a deallocation policy. "];
  Node91 -> Node93 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="Teuchos::RCP::rcpWithDealloc\lUndef",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a69ff146d10e16f667ef0ce4523a5eef7",tooltip="Initialize from a raw pointer with a deallocation policy for an undefined type. "];
  Node91 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="Teuchos::RCP::rcpFromRef",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a6c754d72d6d232c97e38bc359ab6ef82",tooltip="Return a non-owning weak RCP object from a raw object reference for a defined type. "];
  Node91 -> Node95 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="Teuchos::RCP::rcpFromUndefRef",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a823eee3138de3b23dab97b3f37e197f3",tooltip="Return a non-owning weak RCP object from a raw object reference for an undefined type. "];
  Node91 -> Node96 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="Teuchos::RCP::rcpWithEmbedded\lObjPreDestroy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a02148aef172f7b2c0fb2de29cb01b91a",tooltip="Create an RCP with and also put in an embedded object. "];
  Node91 -> Node97 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="Teuchos::RCP::rcpWithEmbedded\lObjPostDestroy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a8272eea6a27f1fce6c30fc5d568f2de7",tooltip="Create an RCP with and also put in an embedded object. "];
  Node91 -> Node98 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="Teuchos::RCP::rcpWithEmbeddedObj",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a506210a123b6e1747d910f037065bd73",tooltip="Create an RCP with and also put in an embedded object. "];
  Node91 -> Node99 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="Teuchos::RCP::rcpWithInverted\lObjOwnership",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#abaa6bdcd39bac7dd5c12c3e0f49eba25",tooltip="Create a new RCP that inverts the ownership of parent and child. "];
  Node91 -> Node100 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="Teuchos::RCP::rcpCloneNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#ae07a807743d25c57754a1988645ba791",tooltip="Allocate a new RCP object with a new RCPNode with memory pointing to the initial node. "];
  Node91 -> Node101 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="Teuchos::RCP::is_null",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a8033d79aee37a9378d73f70eb025b05d",tooltip="Returns true if the underlying pointer is null. "];
  Node91 -> Node102 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="Teuchos::RCP::nonnull",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#ad792756b35ab5a2fa8c1d1d608763aec",tooltip="Returns true if p.get()!=NULL. "];
  Node91 -> Node103 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="Teuchos::RCP::operator==",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#afab9d7e0e5480ec8b455e38de0eee49e",tooltip="Returns true if p.get()==NULL. "];
  Node91 -> Node104 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="Teuchos::RCP::operator!=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a4081b5c4ac5b9d630a695755a72771cc",tooltip="Returns true if p.get()!=NULL. "];
  Node91 -> Node105 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="Teuchos::RCP::rcp_implicit_cast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a61fc9f719ee13e5d961dcf47053883b4",tooltip="Implicit cast of underlying RCP type from T1* to T2*. "];
  Node91 -> Node106 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="Teuchos::RCP::rcp_static_cast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a1c369381869737e67be8cab843b18076",tooltip="Static cast of underlying RCP type from T1* to T2*. "];
  Node91 -> Node107 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="Teuchos::RCP::rcp_const_cast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a6931e6c2f74c9fa9467e5dc91c6cd983",tooltip="Constant cast of underlying RCP type from T1* to T2*. "];
  Node91 -> Node108 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="Teuchos::RCP::rcp_dynamic_cast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a1580c807c6df3fdbcb953687b4ff60c7",tooltip="Dynamic cast of underlying RCP type from T1* to T2*. "];
  Node91 -> Node109 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="Teuchos::RCP::set_extra_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#addd19618c28d1cbc6959f346cee07a7f",tooltip="Set extra data associated with a RCP object. "];
  Node91 -> Node110 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node110 [label="Teuchos::RCP::get_extra_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#ab7f7cd634c8250ff0515bd55c5f3cde6",tooltip="Get a const reference to extra data associated with a RCP object. "];
  Node91 -> Node111 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 [label="Teuchos::RCP::get_nonconst\l_extra_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a8978c29ca24e96cb61185507a0419dac",tooltip="Get a non-const reference to extra data associated with a RCP object. "];
  Node91 -> Node112 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 [label="Teuchos::RCP::get_optional\l_extra_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#aac70269754b423e8e76d2e75b3dfbf96",tooltip="Get a pointer to const extra data (if it exists) associated with a RCP object. "];
  Node91 -> Node113 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node113 [label="Teuchos::RCP::get_optional\l_nonconst_extra_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a7b838cf99afd0bb5f2ebc94ab8d73b59",tooltip="Get a pointer to non-const extra data (if it exists) associated with a RCP object. "];
  Node91 -> Node114 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node114 [label="Teuchos::RCP::get_dealloc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a62a1b34d2efe42b0a0fb4e20c1089f89",tooltip="Return a const reference to the underlying deallocator object. "];
  Node91 -> Node115 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node115 [label="Teuchos::RCP::get_nonconst\l_dealloc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a67483a8eaf4d6a5f234e7bd6c971b009",tooltip="Return a non-const reference to the underlying deallocator object. "];
  Node91 -> Node116 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="Teuchos::RCP::get_optional\l_dealloc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#ac7868e0bffe12f3a8c82daa61cd4cefb",tooltip="Return a pointer to the underlying const deallocator object if it exists. "];
  Node91 -> Node117 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="Teuchos::RCP::get_optional\l_nonconst_dealloc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a40a73590cabeeb6ac3556981e068bd5d",tooltip="Return a pointer to the underlying non-const deallocator object if it exists. "];
  Node91 -> Node118 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node118 [label="Teuchos::RCP::getEmbeddedObj",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#afd9ce82fd86820b298f9c3847d585708",tooltip="Get a const reference to an embedded object that was set by calling rcpWithEmbeddedObjPreDestroy(), rcpWithEmbeddedObjPostDestory(), or rcpWithEmbeddedObj(). "];
  Node91 -> Node119 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node119 [label="Teuchos::RCP::getNonconst\lEmbeddedObj",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a5dfd3a9f656d730dea2902f08a765811",tooltip="Get a non-const reference to an embedded object that was set by calling rcpWithEmbeddedObjPreDestroy(..."];
  Node91 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="Teuchos::RCP::getOptional\lEmbeddedObj",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#ae35995646037935daf4f98375cbb7ae3",tooltip="Get an optional Ptr to a const embedded object if it was set by calling rcpWithEmbeddedObjPreDestroy(..."];
  Node91 -> Node121 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 [label="Teuchos::RCP::getOptional\lNonconstEmbeddedObj",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9a/class_teuchos_1_1_r_c_p.html#a1fcb0b191b4d3f13cd7e2c139dcc4d8e",tooltip="Get an optional Ptr to a non-const embedded object if it was set by calling rcpWithEmbeddedObjPreDest..."];
  Node91 -> Node122 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node122 [label="Teuchos::getInvertedObjOwnership\lParent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d74/namespace_teuchos.html#a36781a62aaf40511a8eb5a8c8d3914f9",tooltip="Get the parent back from an inverted ownership RCP. "];
  Node90 -> Node123 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node123 [label="GetRandom",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/df5/cxx__main__qr__solver_8cpp.html#a208e6cb670c98a810f7406ca3b67a0b2"];
  Node88 -> Node124 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 [label="GetRandomVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/df5/cxx__main__qr__solver_8cpp.html#a77cb5ca9cb34910a21cc78de78c3a805"];
  Node124 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 -> Node123 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node125 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node125 [label="ReturnCodeCheck",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/df5/cxx__main__qr__solver_8cpp.html#ac73ad608bfaca4d0cceb620e644e9bc4"];
  Node88 -> Node126 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node126 [label="Teuchos::SerialDenseMatrix\l::multiply",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d49/class_teuchos_1_1_serial_dense_matrix.html#abfacde2eb37372ddc0489cfeab8540e0",tooltip="Multiply A * B and add them to this; this = beta * this + alpha*A*B. "];
  Node88 -> Node127 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 [label="Teuchos::SerialDenseMatrix\l::putScalar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d49/class_teuchos_1_1_serial_dense_matrix.html#a0e3cdc2fae62879a39f2bc1bab840353",tooltip="Set all values in the matrix to a constant value. "];
  Node88 -> Node128 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node128 [label="Teuchos::SerialQRDenseSolver\l::setMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#ac9523c4f24ca7abc09bdb4ecf7eff942",tooltip="Sets the pointers for coefficient matrix. "];
  Node128 -> Node129 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node129 [label="Teuchos::SerialQRDenseSolver\l::resetMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a7191b6ad460031e9a865172af6dcf5e0"];
  Node129 -> Node130 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node130 [label="Teuchos::SerialQRDenseSolver\l::resetVectors",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a023a3912adcbdff1fd3baa0d219c4597"];
  Node129 -> Node131 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node131 [label="Teuchos::ScalarTraits::one",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df7/struct_teuchos_1_1_scalar_traits.html#a146d96d758b245a3ca2272680ebf52b4",tooltip="Returns representation of one for this scalar type. "];
  Node88 -> Node132 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 [label="Teuchos::SerialQRDenseSolver\l::setVectors",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a5dc14306a257bbb0dc2c6e0f93e551c6",tooltip="Sets the pointers for left and right hand side vector(s). "];
  Node132 -> Node130 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="Teuchos::SerialQRDenseSolver\l::factor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#aa4ff8234d91420cd57cd1d70c83f645f",tooltip="Computes the in-place QR factorization of the matrix using the LAPACK routine _GETRF or the Eigen cla..."];
  Node133 -> Node134 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="Teuchos::SerialQRDenseSolver\l::factored",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#abc1892bd326a29a3f4abd990aa6ddda9",tooltip="Returns true if matrix is factored (factor available via getFactoredMatrix()). "];
  Node133 -> Node135 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="Teuchos::SerialQRDenseSolver\l::equilibrateMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#adc99b3808daa7a53723c6176ba332235",tooltip="Equilibrates the this matrix. "];
  Node135 -> Node136 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="Teuchos::ScalarTraits\l::sfmin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df7/struct_teuchos_1_1_scalar_traits.html#af0f8203d4f3a1f24ca08cb4e77143d72",tooltip="Returns safe minimum (sfmin), such that 1/sfmin does not overflow. "];
  Node135 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="Teuchos::ScalarTraits\l::prec",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df7/struct_teuchos_1_1_scalar_traits.html#afe394147dc5d244004062410187da7f2",tooltip="Returns eps*base. "];
  Node135 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="Teuchos::ScalarTraits\l::zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df7/struct_teuchos_1_1_scalar_traits.html#a1d9fe4c2221fcd9df15a16cf525e0f24",tooltip="Returns representation of zero for this scalar type. "];
  Node135 -> Node131 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 -> Node139 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="Teuchos::ScalarTraits\l::magnitude",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df7/struct_teuchos_1_1_scalar_traits.html#a09d4569fca3d1a965037a483dd86de56",tooltip="Returns the magnitudeType of the scalar type a. "];
  Node135 -> Node140 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node140 [label="Teuchos::LAPACK::LASCL",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dfb/class_teuchos_1_1_l_a_p_a_c_k.html#abcc5bf29f69788330cd6fa77708cf9c7",tooltip="Multiplies the m by n matrix A by the real scalar cto/cfrom. "];
  Node133 -> Node141 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node141 [label="Teuchos::SerialQRDenseSolver\l::allocateWORK",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#af9735f68e49e81941b9aa8a727d9c4c0"];
  Node141 -> Node129 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node141 -> Node130 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 -> Node142 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node142 [label="Teuchos::SerialQRDenseSolver::tau",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a81c0885e2204309843a5e2f243031c68",tooltip="Returns pointer to pivot vector (if factorization has been computed), zero otherwise. "];
  Node133 -> Node143 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node143 [label="Teuchos::LAPACK::GEQRF",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dfb/class_teuchos_1_1_l_a_p_a_c_k.html#ace3f5efd184ad4c9dc36634e33529f10",tooltip="Computes a QR factorization of a general m by n matrix A. "];
  Node88 -> Node144 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 [label="Teuchos::SerialQRDenseSolver\l::formQ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#ad860969dd7e50b0ed129bf07ca28fd40",tooltip="Explicitly forms the unitary matrix Q. "];
  Node144 -> Node134 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 -> Node145 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node145 [label="Teuchos::LAPACK::UNGQR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dfb/class_teuchos_1_1_l_a_p_a_c_k.html#a7d00cc423e206ea6cc9df919e0931184",tooltip="Compute explicit QR factor from QR factorization (GEQRF) (complex case). "];
  Node88 -> Node146 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 [label="Teuchos::SerialQRDenseSolver\l::solve",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#ab0f237691fad0cec946f8d45d5d8e0b8",tooltip="Computes the solution X to AX = B for the this matrix and the B provided to SetVectors().. "];
  Node146 -> Node147 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 [label="Teuchos::SerialQRDenseSolver\l::equilibrateRHS",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#af0098f5074e9da9db3e7312bce4b426e",tooltip="Equilibrates the current RHS. "];
  Node147 -> Node136 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 -> Node131 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 -> Node139 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 -> Node140 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 -> Node148 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node148 [label="Teuchos::SerialQRDenseSolver\l::shouldEquilibrate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a4b01b3af100b1623715acc45871e7489",tooltip="Returns true if the LAPACK general rules for equilibration suggest you should equilibrate the system..."];
  Node148 -> Node149 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 [label="Teuchos::SerialQRDenseSolver\l::computeEquilibrateScaling",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#af8396c74539a3aa983787fba81115401",tooltip="Determines if this matrix should be scaled. "];
  Node149 -> Node136 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 -> Node131 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 -> Node139 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 -> Node134 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 -> Node150 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 [label="Teuchos::SerialQRDenseSolver\l::multiplyQ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a72ab92abcb2e6411a276898c2e740249",tooltip="Left multiply the input matrix by the unitary matrix Q or its adjoint. "];
  Node150 -> Node151 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node151 [label="Teuchos::SerialDenseMatrix\l::numRows",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d49/class_teuchos_1_1_serial_dense_matrix.html#aa5da562777ee7cd7a2c7d581646bf3ef",tooltip="Returns the row dimension of this matrix. "];
  Node150 -> Node152 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 [label="Teuchos::SerialDenseMatrix\l::values",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d49/class_teuchos_1_1_serial_dense_matrix.html#ab73c00a9305fa28842e15af738632009",tooltip="Data array access method. "];
  Node150 -> Node134 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 -> Node153 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node153 [label="Teuchos::SerialDenseMatrix\l::numCols",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d49/class_teuchos_1_1_serial_dense_matrix.html#aca99d8ead38b3af48f4de39d5abe5f68",tooltip="Returns the column dimension of this matrix. "];
  Node150 -> Node154 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node154 [label="Teuchos::SerialDenseMatrix\l::stride",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d49/class_teuchos_1_1_serial_dense_matrix.html#a6bc252ebddadb18e5e3214615f1d82b7",tooltip="Returns the stride between the columns of this matrix in memory. "];
  Node150 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 -> Node155 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node155 [label="Teuchos::LAPACK::UNMQR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dfb/class_teuchos_1_1_l_a_p_a_c_k.html#ac46d2a65e6dcead7336f3008287f515b",tooltip="Apply Householder reflectors (complex case). "];
  Node146 -> Node156 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 [label="Teuchos::SerialQRDenseSolver\l::solveR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a1323acea674a473520517460312c0445",tooltip="Solve input matrix on the left with the upper triangular matrix R or its adjoint. ..."];
  Node156 -> Node151 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 -> Node152 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 -> Node134 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 -> Node153 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 -> Node154 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 -> Node157 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 [label="Teuchos::LAPACK::TRTRS",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dfb/class_teuchos_1_1_l_a_p_a_c_k.html#a909464a50cb70ab66f6e0d8dbecca18f",tooltip="Solves a triangular linear system of the form A*X=B or A**T*X=B, where A is a triangular matrix..."];
  Node146 -> Node158 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 [label="Teuchos::SerialQRDenseSolver\l::unequilibrateLHS",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#af967ff0a70a3f230a682b22605cb84bc",tooltip="Unscales the solution vectors if equilibration was used to solve the system. "];
  Node158 -> Node136 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 -> Node131 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 -> Node139 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 -> Node159 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node159 [label="void",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dd1/3rd_party_2gc_2include_2gc_8h.html#acacfa47efcc44a29f7bb7d98f2a000f8"];
  Node158 -> Node140 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node160 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node160 [label="CompareVectors",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/df5/cxx__main__qr__solver_8cpp.html#ac910dd32f432c10ef34555b4ff06dcf1"];
  Node160 -> Node161 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node161 [label="Teuchos::SerialDenseMatrix\l::normFrobenius",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d49/class_teuchos_1_1_serial_dense_matrix.html#ac806cef64c8dcb4d48f21039efa4bdd1",tooltip="Returns the Frobenius-norm of the matrix. "];
  Node88 -> Node150 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node156 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node162 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 [label="Teuchos::SerialQRDenseSolver\l::getQ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a2c9a2a4b9fa5069fd59d3f0f171c1ea7",tooltip="Returns pointer to Q (assuming factorization has been performed). "];
  Node88 -> Node163 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node163 [label="Teuchos::SerialQRDenseSolver\l::formR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a3ea3e2068db1e127605427bee3a28ef9",tooltip="Explicitly forms the upper triangular matrix R. "];
  Node163 -> Node134 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node163 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node163 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node164 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 [label="Teuchos::SerialQRDenseSolver\l::solveWithTransposeFlag",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#ab78e36fa748b2f4802ea4f9ee227d05b",tooltip="All subsequent function calls will work with the transpose-type set by this method (Teuchos::NO_TRANS..."];
  Node164 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node146 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node149 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node135 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node147 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node158 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node144 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node163 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node150 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 -> Node156 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node165 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node165 [label="Teuchos::SerialQRDenseSolver\l::factorWithEquilibration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6d/class_teuchos_1_1_serial_q_r_dense_solver.html#a071bc1a8863836bbd609a35fd8cd1de2",tooltip="Causes equilibration to be called just before the matrix factorization as part of the call to factor..."];
  Node88 -> Node159 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node153 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node151 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
